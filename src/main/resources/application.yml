server:
  port: 8081

spring:
  application:
    name: service

  datasource:
    url: jdbc:postgresql://postgres:5432/atendimentodb
    username: calderarogustavo
    password: Gusang_20011

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
        spring.json.trusted.packages: "*"

eureka:
  client:
    enabled: true
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    instance-id: ${random.value}
    prefer-ip-address: true

resilience4j:
  retry:
    configs:
      default:
        maxAttempts: 2
        waitDuration: 20ms
    instances:
      Retry_ServiceAPIClient_payoutCalculation:
        baseConfig: default
        maxAttempts: 3
        retryExceptions:
          - org.springframework.web.client.ResourceAccessException
        ignoreExceptions:
          - org.springframework.web.client.HttpServerErrorException

  circuitbreaker:
    configs:
      default:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 10000
    instances:
      CircuitBreaker_ServiceAPIClient_serviceRegister:
        baseConfig: default
        waitDurationInOpenState: 5000

logging:
  level:
    org.springframework.beans.factory.support.DefaultListableBeanFactory: ERROR
    org.springframework.context.annotation.ConfigurationClassPostProcessor: ERROR
    org.springframework.cloud.loadbalancer: ERROR
    org.springframework.cloud.commons.config: ERROR
